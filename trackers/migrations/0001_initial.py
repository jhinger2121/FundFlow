# Generated by Django 5.2.4 on 2025-09-09 23:49

import django.db.models.deletion
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('slug', models.SlugField(blank=True, unique=True)),
                ('description', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='UnderlyingAsset',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('yahoo_ticker', models.CharField(blank=True, max_length=50)),
                ('description', models.TextField(blank=True, null=True)),
                ('live_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('live_price_updated_at', models.DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='BrokerAccount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(blank=True)),
                ('broker_name', models.CharField(choices=[('IBKR', 'Interactive Brokers'), ('QTRD', 'Questrade'), ('WS', 'Wealthsimple')], max_length=20)),
                ('account_number', models.CharField(blank=True, max_length=50, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='broker_accounts', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user', 'broker_name')},
            },
        ),
        migrations.CreateModel(
            name='BrokerAccountProfitSummary',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('weekly_profit', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12)),
                ('monthly_profit', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12)),
                ('annually_profit', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('broker', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='brokeraccount_profit_summaries', to='trackers.brokeraccount')),
            ],
        ),
        migrations.CreateModel(
            name='CompanyProfitSummary',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('weekly_profit', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12)),
                ('monthly_profit', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12)),
                ('annually_profit', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='company_profit_summaries', to='trackers.company')),
            ],
        ),
        migrations.CreateModel(
            name='Fund',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=25)),
                ('slug', models.SlugField(blank=True)),
                ('description', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('total_profit', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=15)),
                ('broker_account', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='broker', to='trackers.brokeraccount')),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='funds', to='trackers.company')),
            ],
        ),
        migrations.CreateModel(
            name='FundProfitSummary',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('weekly_profit', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12)),
                ('monthly_profit', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12)),
                ('annually_profit', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('fund', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fund_profit_summaries', to='trackers.fund')),
            ],
        ),
        migrations.CreateModel(
            name='Holding',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.DecimalField(decimal_places=4, max_digits=10)),
                ('average_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('total_cost', models.DecimalField(decimal_places=2, max_digits=15)),
                ('realized_profit', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=15)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('fund', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='holdings', to='trackers.fund')),
                ('asset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fund_holdings', to='trackers.underlyingasset')),
            ],
        ),
        migrations.CreateModel(
            name='HoldingSnapshot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.DecimalField(decimal_places=4, max_digits=10)),
                ('total_cost', models.DecimalField(decimal_places=2, max_digits=15)),
                ('realized_profit', models.DecimalField(decimal_places=2, max_digits=15)),
                ('unrealized_profit', models.DecimalField(decimal_places=2, max_digits=15)),
                ('total_gain_loss', models.DecimalField(decimal_places=2, max_digits=15)),
                ('price_at_snapshot', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('snapshot_time', models.DateTimeField(auto_now_add=True)),
                ('holding', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='snapshots', to='trackers.holding')),
            ],
        ),
        migrations.CreateModel(
            name='Option',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ticker', models.CharField(max_length=255, unique=True)),
                ('type', models.CharField(choices=[('C', 'Call'), ('P', 'Put')], max_length=3)),
                ('strike_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('expiration_date', models.DateField()),
                ('price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('price_snapshot_date', models.DateTimeField(blank=True, null=True)),
                ('fund', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='options', to='trackers.fund')),
                ('underlying_asset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='options', to='trackers.underlyingasset')),
            ],
        ),
        migrations.CreateModel(
            name='Position',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('remaining_quantity', models.IntegerField()),
                ('average_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('profit_loss', models.DecimalField(decimal_places=2, default=0.0, max_digits=12)),
                ('trade_type', models.CharField(choices=[('B', 'Buy'), ('S', 'Sell'), ('SS', 'Short Sell'), ('BC', 'Buy to Close')], max_length=2)),
                ('date', models.DateField()),
                ('active', models.BooleanField(default=True)),
                ('commission', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('fund', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='positions', to='trackers.fund')),
                ('option', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='positions', to='trackers.option')),
            ],
        ),
        migrations.CreateModel(
            name='PositionHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('remaining_quantity', models.IntegerField()),
                ('average_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('profit_loss', models.DecimalField(decimal_places=2, max_digits=12)),
                ('position', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='history', to='trackers.position')),
            ],
        ),
        migrations.CreateModel(
            name='Trade',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('trade_type', models.CharField(choices=[('B', 'Buy'), ('S', 'Sell'), ('SS', 'Short Sell'), ('BC', 'Buy to Close')], max_length=2)),
                ('quantity', models.IntegerField()),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('total_price', models.DecimalField(blank=True, decimal_places=2, max_digits=12)),
                ('date', models.DateTimeField(blank=True, null=True)),
                ('active', models.BooleanField(default=True)),
                ('commission', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('option', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='trades', to='trackers.option')),
                ('position', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='trades', to='trackers.position')),
            ],
        ),
        migrations.AddConstraint(
            model_name='fund',
            constraint=models.UniqueConstraint(fields=('name', 'broker_account'), name='unique_fund_name_per_broker'),
        ),
        migrations.AddConstraint(
            model_name='fund',
            constraint=models.UniqueConstraint(fields=('name', 'company'), name='unique_fund_name_per_company'),
        ),
    ]
